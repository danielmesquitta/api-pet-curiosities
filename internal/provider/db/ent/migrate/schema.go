// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CuriositiesColumns holds the columns for the "curiosities" table.
	CuriositiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "title", Type: field.TypeString},
		{Name: "content", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "pet_id", Type: field.TypeUUID, Nullable: true},
	}
	// CuriositiesTable holds the schema information for the "curiosities" table.
	CuriositiesTable = &schema.Table{
		Name:       "curiosities",
		Columns:    CuriositiesColumns,
		PrimaryKey: []*schema.Column{CuriositiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "curiosities_pets_pet",
				Columns:    []*schema.Column{CuriositiesColumns[5]},
				RefColumns: []*schema.Column{PetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PetsColumns holds the columns for the "pets" table.
	PetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "specie", Type: field.TypeEnum, Enums: []string{"DOG", "CAT"}},
		{Name: "breed", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// PetsTable holds the schema information for the "pets" table.
	PetsTable = &schema.Table{
		Name:       "pets",
		Columns:    PetsColumns,
		PrimaryKey: []*schema.Column{PetsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "tier", Type: field.TypeEnum, Enums: []string{"PRO", "FREE"}, Default: "FREE"},
		{Name: "subscription_expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserCuriositiesColumns holds the columns for the "user_curiosities" table.
	UserCuriositiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "viewed", Type: field.TypeBool, Default: false},
		{Name: "liked", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "curiosity_id", Type: field.TypeUUID, Nullable: true},
	}
	// UserCuriositiesTable holds the schema information for the "user_curiosities" table.
	UserCuriositiesTable = &schema.Table{
		Name:       "user_curiosities",
		Columns:    UserCuriositiesColumns,
		PrimaryKey: []*schema.Column{UserCuriositiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_curiosities_users_user",
				Columns:    []*schema.Column{UserCuriositiesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_curiosities_curiosities_curiosity",
				Columns:    []*schema.Column{UserCuriositiesColumns[5]},
				RefColumns: []*schema.Column{CuriositiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserPetsColumns holds the columns for the "user_pets" table.
	UserPetsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "pet_id", Type: field.TypeUUID},
	}
	// UserPetsTable holds the schema information for the "user_pets" table.
	UserPetsTable = &schema.Table{
		Name:       "user_pets",
		Columns:    UserPetsColumns,
		PrimaryKey: []*schema.Column{UserPetsColumns[0], UserPetsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_pets_user_id",
				Columns:    []*schema.Column{UserPetsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_pets_pet_id",
				Columns:    []*schema.Column{UserPetsColumns[1]},
				RefColumns: []*schema.Column{PetsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CuriositiesTable,
		PetsTable,
		UsersTable,
		UserCuriositiesTable,
		UserPetsTable,
	}
)

func init() {
	CuriositiesTable.ForeignKeys[0].RefTable = PetsTable
	UserCuriositiesTable.ForeignKeys[0].RefTable = UsersTable
	UserCuriositiesTable.ForeignKeys[1].RefTable = CuriositiesTable
	UserPetsTable.ForeignKeys[0].RefTable = UsersTable
	UserPetsTable.ForeignKeys[1].RefTable = PetsTable
}
